-- Description:
-- L1Menu logic generated by VHDL Producer:

-- ========================================================
-- from VHDL producer:

-- Module ID: {{ module.id }}

-- Name of L1 Trigger Menu:
-- {{ menu.info.name }}

-- Unique ID of L1 Trigger Menu:
-- {{ menu.info.uuid_menu }}

-- Unique ID of firmware implementation:
-- {{ menu.info.uuid_firmware }}

-- Scale set:
-- {{ menu.info.scale_set }}

-- VHDL producer version
-- v{{ menu.info.sw_version }}
-- ========================================================

library ieee;
use ieee.std_logic_1164.all;

use work.lhc_data_pkg.all;
use work.gtl_pkg.all;
use work.lut_pkg.all;
use work.l1menu_pkg.all;

entity l1menu is
    port(
        lhc_clk : in std_logic;
        data_in : in data_pipeline_record;
        conv_in : in conv_pipeline_record;
        algo : out std_logic_vector(NR_ALGOS-1 downto 0));
end l1menu;

architecture rtl of l1menu is

-- ============================================================
-- UNDER CONSTRUCTION
-- ============================================================

-- ************************************************************
-- DRAFT

-- Signal definitions for calculations outputs
    -- Muon charge correlation    
    signal cc_double : obj_bx_muon_cc_double_array;
    signal cc_triple : obj_bx_muon_cc_triple_array;
    signal cc_quad : obj_bx_muon_cc_quad_array;
-- ************************************************************

-- Signal definition for conditions names
{%- for condition in module.conditions %}
    signal {{ condition.vhdl_signal }} : std_logic;
{%- endfor %}

-- Signal definition for algorithms names
{%- for algorithm in module.algorithms|sort_by_attribute('index') %}
    signal {{ algorithm.vhdl_signal }} : std_logic;
{%- endfor %}

begin

-- ============================================================
-- UNDER CONSTRUCTION
-- ============================================================

-- External condition assignment
{%- for condition in module.externalConditions %}
    {{ condition.vhdl_signal }} <= data_in.ext_cond(bx({{ condition.objects[0].bx }}))({{ condition.objects[0].externalChannelId }}); -- {{ condition.vhdl_signal }}
{%- endfor %}

-- ************************************************************
-- DRAFTS

-- Instantiations for conditions
{%- for condition in module.caloConditions %}
{%- include  "instances/combinatorial_conditions_calos.vhd" %}
{%- endfor %}
{%- for condition in module.caloConditionsOvRm %}
{%- include  "instances/combinatorial_conditions_ovrm.vhd" %}
{%- endfor %}
{%- for condition in module.muonConditions %}
{%- include  "instances/combinatorial_conditions_muons.vhd" %}
{%- endfor %}
{%- for condition in module.esumsConditions %}
{%- include  "instances/combinatorial_conditions_esums.vhd" %}
{%- endfor %}
{%- for condition in module.caloCaloCorrConditions %}
{%- include  "instances/correlation_conditions.vhd" %}
{%- endfor %}
{%- for condition in module.caloMuonCorrConditions %}
{%- include  "instances/correlation_conditions.vhd" %}
{%- endfor %}
{%- for condition in module.muonMuonCorrConditions %}
{%- include  "instances/correlation_conditions.vhd" %}
{%- endfor %}
{%- for condition in module.caloCaloCorrOvRmConditions %}
{%- include  "instances/correlation_conditions_ovrm.vhd" %}
{%- endfor %}

-- ************************************************************

-- Instantiations of algorithms
{% for algorithm in module.algorithms|sort_by_attribute('index') %}
{{ algorithm.vhdl_signal }} <= {{ algorithm.vhdl_expression }};
algo({{ algorithm.module_index | d}}) <= {{ algorithm.vhdl_signal }};
{% endfor %}

end architecture rtl;

